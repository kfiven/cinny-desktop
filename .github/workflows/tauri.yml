name: "Publish Tauri App"
on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  publish-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest, macos-12]

    runs-on: ${{ matrix.platform }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3.0.2
      with: 
        submodules: true
    # - name: Get release
    #   id: get_release
    #   uses: bruceadams/get-release@3a8733307b85cd96d52772b037617bd63d99522e
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup node
      uses: actions/setup-node@v3.3.0
      with:
        node-version: 17.9.0
    - name: Install Rust stable
      uses: actions-rs/toolchain@v1.0.7
      with:
        toolchain: stable
    - name: Install dependencies (ubuntu only)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
    - name: Install cinny dependencies
      run: cd cinny && npm ci
    - name: Install tauri dependencies
      run: npm ci
    - name: Build desktop app with Tauri
      if: matrix.platform != 'macos-12'
      uses: tauri-apps/tauri-action@v0.3.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
      # with:
      #   releaseId: ${{ steps.get_release.outputs.upload_url }}
    - name: Get app version (macos, ubuntu)
      if: matrix.platform != 'windows-latest, macos-12'
      id: vars
      run: echo ::set-output name=tag::$(jq .package.version src-tauri/tauri.conf.json | tr -d '"')
    - name: Move dmg
      if: matrix.platform == 'macos-latest'
      run: mv "src-tauri/target/release/bundle/dmg/cinny_${{ steps.vars.outputs.tag }}_x64.dmg" "src-tauri/target/release/bundle/dmg/cinny_intel_x64.dmg"
    - name: Upload PR Info
      if: matrix.platform == 'macos-latest'
      uses: actions/upload-artifact@v3.0.0
      with:
        name: cinny_intel_x64.dmg
        path: src-tauri/target/release/bundle/dmg/cinny_intel_x64.dmg
    - name: Install rustup target aarch64 darwin
      if: matrix.platform == 'macos-12'
      run: rustup target add aarch64-apple-darwin
    - name: Build desktop app with Tauri
      if: matrix.platform == 'macos-12'
      uses: tauri-apps/tauri-action@v0.3.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
      with:
        args: -- --target aarch64-apple-darwin
    - name: Get app version (macos-12)
      if: matrix.platform == 'macos-12'
      id: vars2
      run: echo ::set-output name=tag::$(jq .package.version src-tauri/tauri.conf.json | tr -d '"')
    - name: Move macOS files (silicon)
      if: matrix.platform == 'macos-12'
      run: mv "src-tauri/target/release/bundle/dmg/cinny_${{ steps.vars2.outputs.tag }}_aarch64.dmg" "src-tauri/target/release/bundle/dmg/Cinny-desktop_aarch64.dmg"
    - if: matrix.platform == 'macos-12'
      run: mv "src-tauri/target/release/bundle/macos/cinny.app.tar.gz" "src-tauri/target/release/bundle/macos/Cinny-desktop_aarch64.app.tar.gz"
    - if: matrix.platform == 'macos-12'
      run: mv "src-tauri/target/release/bundle/macos/cinny.app.tar.gz.sig" "src-tauri/target/release/bundle/macos/Cinny-desktop_aarch64.app.tar.gz.sig"
    - name: Upload PR Info
      if: matrix.platform == 'macos-12'
      uses: actions/upload-artifact@v3.0.0
      with:
        name: Cinny-desktop_aarch64.dmg
        path: src-tauri/target/release/bundle/dmg/Cinny-desktop_aarch64.dmg
    - name: Upload PR Info
      if: matrix.platform == 'macos-12'
      uses: actions/upload-artifact@v3.0.0
      with:
        name: Cinny-desktop_aarch64.tar.gz
        path: src-tauri/target/release/bundle/macos/Cinny-desktop_aarch64.tar.gz
    - name: Upload PR Info
      if: matrix.platform == 'macos-12'
      uses: actions/upload-artifact@v3.0.0
      with:
        name: Cinny-desktop_aarch64.tar.gz.sig
        path: src-tauri/target/release/bundle/macos/Cinny-desktop_aarch64.tar.gz.sig
    - name: Move deb
      if: matrix.platform == 'ubuntu-latest'
      run: mv "src-tauri/target/release/bundle/deb/cinny_${{ steps.vars.outputs.tag }}_amd64.deb" "src-tauri/target/release/bundle/deb/cinny_amd64.deb"
    - name: Upload PR Info
      if: matrix.platform == 'ubuntu-latest'
      uses: actions/upload-artifact@v3.0.0
      with:
        name: cinny_amd64.deb
        path: src-tauri/target/release/bundle/deb/cinny_amd64.deb
    - name: Get app version (windows)
      if: matrix.platform == 'windows-latest'
      run: |
        $json = (Get-Content "src-tauri\tauri.conf.json" -Raw) | ConvertFrom-Json
        $version = $json.package.version
        echo "Version: ${version}"
        echo "TAURI_VERSION=${version}" >> $Env:GITHUB_ENV
        echo "${Env:TAURI_VERSION}"
      shell: pwsh
    - name: Move msi
      if: matrix.platform == 'windows-latest'
      run: mv "src-tauri\target\release\bundle\msi\cinny_${{ env.TAURI_VERSION }}_x64_en-US.msi" "src-tauri\target\release\bundle\msi\cinny_x64_en-US.msi"
    - name: Upload PR Info
      if: matrix.platform == 'windows-latest'
      uses: actions/upload-artifact@v3.0.0
      with:
        name: cinny_x64_en-US.msi
        path: src-tauri\target\release\bundle\msi\cinny_x64_en-US.msi
    # - name: Upload tagged release (macos)
    #   if: matrix.platform == 'macos-latest'
    #   uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5
    #   with:
    #     files: |
    #       src-tauri/target/release/bundle/dmg/cinny_${{ steps.vars.outputs.tag }}_x64.dmg
    #       src-tauri/target/release/bundle/macos/cinny.app.tar.gz
    #       src-tauri/target/release/bundle/macos/cinny.app.tar.gz.sig
    # - name: Upload tagged release (ubuntu)
    #   if: matrix.platform == 'ubuntu-latest'
    #   uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5
    #   with:
    #     files: |
    #       src-tauri/target/release/bundle/deb/cinny_${{ steps.vars.outputs.tag }}_amd64.deb
    #       src-tauri/target/release/bundle/appimage/cinny_${{ steps.vars.outputs.tag }}_amd64.AppImage
    #       src-tauri/target/release/bundle/appimage/cinny_${{ steps.vars.outputs.tag }}_amd64.AppImage.tar.gz
    #       src-tauri/target/release/bundle/appimage/cinny_${{ steps.vars.outputs.tag }}_amd64.AppImage.tar.gz.sig
    # - name: Get app version (windows)
    #   if: matrix.platform == 'windows-latest'
    #   run: |
    #     $json = (Get-Content "src-tauri\tauri.conf.json" -Raw) | ConvertFrom-Json
    #     $version = $json.package.version
    #     echo "Version: ${version}"
    #     echo "TAURI_VERSION=${version}" >> $Env:GITHUB_ENV
    #     echo "${Env:TAURI_VERSION}"
    #   shell: pwsh
    # - name: Upload tagged release (windows)
    #   if: matrix.platform == 'windows-latest'
    #   uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5
    #   with:
    #     files: |
    #       src-tauri\target\release\bundle\msi\cinny_${{ env.TAURI_VERSION }}_x64_en-US.msi
    #       src-tauri\target\release\bundle\msi\cinny_${{ env.TAURI_VERSION }}_x64_en-US.msi.zip
    #       src-tauri\target\release\bundle\msi\cinny_${{ env.TAURI_VERSION }}_x64_en-US.msi.zip.sig

  # release-update:
  #   needs: publish-tauri
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3.0.2
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Run release.json
  #       run: npm run release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # zip-archive:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3.0.2
  #       with:
  #         submodules: true
  #     - name: Create zip including submodules
  #       run: |
  #         cd ..
  #         zip ${{ github.event.repository.name }}/${{ github.event.repository.name }}-${{ github.ref_name }}.zip ${{ github.event.repository.name }} -r
  #     - name: Upload PR Info
  #       uses: actions/upload-artifact@v3.0.0
  #       with:
  #         name: ${{ github.event.repository.name }}-${{ github.ref_name }}.zip
  #         path: ${{ github.event.repository.name }}-${{ github.ref_name }}.zip
  #         retention-days: 1
  #     - name: Upload zip
  #       uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5
  #       with:
  #         files: |
  #           ${{ github.event.repository.name }}-${{ github.ref_name }}.zip
      
